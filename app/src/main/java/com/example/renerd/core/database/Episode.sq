CREATE TABLE Episode (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  url TEXT NOT NULL,
  published_at TEXT,
  pub_date TEXT,
  modified_at TEXT,
  duration INTEGER,
  title TEXT NOT NULL,
  slug TEXT,
  episode TEXT,
  product TEXT,
  product_name TEXT,
  product_email TEXT,
  product_status INTEGER, // Booleano como inteiro (0/1)
  friendly_post_type TEXT,
  friendly_post_type_slug TEXT,
  friendly_post_time TEXT,
  friendly_post_date TEXT,
  subject TEXT,
  image TEXT,
  image_alt TEXT,
  audio_high TEXT,
  audio_medium TEXT,
  audio_low TEXT,
  audio_zip TEXT,
  description TEXT,
  guests TEXT,
  post_type_class TEXT
);

// Tabelas separadas para Thumbnails, JumpToTime e Category,
// pois são objetos complexos.
// Você pode relacioná-los à tabela Episode usando chaves estrangeiras.

CREATE TABLE Thumbnails (
  episode_id INTEGER NOT NULL REFERENCES Episode(id),
  x1536 TEXT,
  x2048 TEXT,
  img_4x3_355x266 TEXT,
  img_16x9_1210x544 TEXT,
  img_16x9_760x428 TEXT,
  img_4x6_448x644 TEXT,
  img_1x1_3000x3000 TEXT,
  PRIMARY KEY (episode_id)
);

CREATE TABLE JumpToTime (
  episode_id INTEGER NOT NULL REFERENCES Episode(id),
  test TEXT,
  start_time INTEGER,
  end_time INTEGER,
  PRIMARY KEY (episode_id)
);

CREATE TABLE Category (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  term_id INTEGER,
  name TEXT,
  slug TEXT,
  term_group INTEGER,
  term_taxonomy_id INTEGER,
  taxonomy TEXT,
  description TEXT,
  parent INTEGER,
  count INTEGER,
  filter TEXT
);

// Uma tabela para relacionar episódios com categorias (muitos-para-muitos)
CREATE TABLE EpisodeCategory (
  episode_id INTEGER NOT NULL REFERENCES Episode(id),
  category_id INTEGER NOT NULL REFERENCES Category(id),
  PRIMARY KEY (episode_id, category_id)
);